{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the wrapper of the pokeapi.co API. If you want to use the API, you can use this library to make it easier and faster. if you are interesting to contribute to the project, you can read the contributing guide file.","title":"Home"},{"location":"about/","text":"About What is this? This website, is a website who has generated by MkDocs . This website provide all the documentation necessary to the PokeApi Library Contributors This website is maintained by Tykok , and the library is maintained by Tykok too. You can contribute to this project by making an issue or a pull request on the PokeAPI repository . Technology and tools used For this library, I used Kotlin and I developed it with IntelliJ IDEA Ultimate . I used MkDocs to generate this website.","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#what-is-this","text":"This website, is a website who has generated by MkDocs . This website provide all the documentation necessary to the PokeApi Library","title":"What is this?"},{"location":"about/#contributors","text":"This website is maintained by Tykok , and the library is maintained by Tykok too. You can contribute to this project by making an issue or a pull request on the PokeAPI repository .","title":"Contributors"},{"location":"about/#technology-and-tools-used","text":"For this library, I used Kotlin and I developed it with IntelliJ IDEA Ultimate . I used MkDocs to generate this website.","title":"Technology and tools used"},{"location":"getting-started/","text":"Getting started To install this library, follow the instructions here according to your build system. Kotlin: build.gradle.kts dependencies { implementation(\"fr.tykok.pokeapi:{version}\") } Groovy: build.gradle dependencies { implementation 'fr.tykok.pokeapi:{version}' } Maven: pom.xml <dependencies> <dependecy> <groupId>fr.tykok.pokeapi</groupId> <artifactId>{version}</artifactId> </dependecy> </dependencies>","title":"Getting started"},{"location":"getting-started/#getting-started","text":"To install this library, follow the instructions here according to your build system.","title":"Getting started"},{"location":"getting-started/#kotlin-buildgradlekts","text":"dependencies { implementation(\"fr.tykok.pokeapi:{version}\") }","title":"Kotlin: build.gradle.kts"},{"location":"getting-started/#groovy-buildgradle","text":"dependencies { implementation 'fr.tykok.pokeapi:{version}' }","title":"Groovy: build.gradle"},{"location":"getting-started/#maven-pomxml","text":"<dependencies> <dependecy> <groupId>fr.tykok.pokeapi</groupId> <artifactId>{version}</artifactId> </dependecy> </dependencies>","title":"Maven: pom.xml"},{"location":"methods/","text":"Methods To use the methods, you need to import PokeApi class. Next, you can use the get methods to fetch data from the pokeapi.co . You need to give the entity type as a generic parameter to the get() methods. The available entity types are available in the fr.tykok.pokeapi.entity package, all the documentation are given in the API Resource section of this website. All entities used to call a specific endpoint and is used to map the response of the endpoint. Each entity are described in the entities section. Finally, you need to give an id , the name , or the limit of the list to get the entity or the list of entities given in the generic parameter. All parameters for the get() method are described below. With id of the pokemon You can get a pokemon with the id of the pokemon. For example, you can get the pokemon with id 25 as Pikachu. val pikachu = PokeApi.get<Pokemon>(id = 25) With name of the pokemon Same thing, but here you can use the name of the pokemon. With the name of the pokemon you can get it . val pikachu = PokeApi.get<Pokemon>(name = \"pikachu\") If you give a wrong name, you will throw an exception. List of pokemon You can get a list of pokemon with the limit of the list. For example, you can get the first 10 pokemon. val pokemonList = PokeApi.get<Pokemon>(limit = 10) You can also get a list of pokemon with the limit and the offset of the list. For example, you can get a list of pokemon from 10 to 20 with limit = 10 and offset = 10 (you start at the 10th pokemon and you get the 10 next). val pokemonList = PokeApi.get<Pokemon>(limit = 10, offset = 10)","title":"Methods"},{"location":"methods/#methods","text":"To use the methods, you need to import PokeApi class. Next, you can use the get methods to fetch data from the pokeapi.co . You need to give the entity type as a generic parameter to the get() methods. The available entity types are available in the fr.tykok.pokeapi.entity package, all the documentation are given in the API Resource section of this website. All entities used to call a specific endpoint and is used to map the response of the endpoint. Each entity are described in the entities section. Finally, you need to give an id , the name , or the limit of the list to get the entity or the list of entities given in the generic parameter. All parameters for the get() method are described below.","title":"Methods"},{"location":"methods/#with-id-of-the-pokemon","text":"You can get a pokemon with the id of the pokemon. For example, you can get the pokemon with id 25 as Pikachu. val pikachu = PokeApi.get<Pokemon>(id = 25)","title":"With id of the pokemon"},{"location":"methods/#with-name-of-the-pokemon","text":"Same thing, but here you can use the name of the pokemon. With the name of the pokemon you can get it . val pikachu = PokeApi.get<Pokemon>(name = \"pikachu\") If you give a wrong name, you will throw an exception.","title":"With name of the pokemon"},{"location":"methods/#list-of-pokemon","text":"You can get a list of pokemon with the limit of the list. For example, you can get the first 10 pokemon. val pokemonList = PokeApi.get<Pokemon>(limit = 10) You can also get a list of pokemon with the limit and the offset of the list. For example, you can get a list of pokemon from 10 to 20 with limit = 10 and offset = 10 (you start at the 10th pokemon and you get the 10 next). val pokemonList = PokeApi.get<Pokemon>(limit = 10, offset = 10)","title":"List of pokemon"},{"location":"entities/berry/","text":"Berry The Berry entity is used to map data from https://pokeapi.co/api/v2/berry/... .","title":"Berry"},{"location":"entities/berry/#berry","text":"The Berry entity is used to map data from https://pokeapi.co/api/v2/berry/... .","title":"Berry"},{"location":"entities/contest/","text":"","title":"Contest"},{"location":"entities/encounter/","text":"","title":"Encounter"},{"location":"entities/evolution/","text":"","title":"Evolution"},{"location":"entities/game/","text":"","title":"Game"},{"location":"entities/item/","text":"","title":"Item"},{"location":"entities/location/","text":"","title":"Location"},{"location":"entities/machine/","text":"","title":"Machine"},{"location":"entities/move/","text":"","title":"Move"},{"location":"entities/pokedex/","text":"","title":"Pokedex"},{"location":"entities/pokemon/","text":"Pokemon In the Pokemon package, you'll be get the following classes according to their endpoint: Pokemon Abilities Characteristics Egg Group [Genders]","title":"Pokemon"},{"location":"entities/pokemon/#pokemon","text":"In the Pokemon package, you'll be get the following classes according to their endpoint: Pokemon Abilities Characteristics Egg Group [Genders]","title":"Pokemon"},{"location":"entities/resource-list/","text":"","title":"Resource List"},{"location":"entities/utility/","text":"","title":"Utility"}]}